// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext.versions = [
            'gradleVersion'               : '3.3.2',
            'appCompatVersion'            : '1.1.0-alpha03',
            'constraintlayoutVersion'     : '1.1.3',
            'permissionsdispatcherVersion': '3.3.1',
            'materialVersion'             : '1.1.0-alpha05',

            'kotlinVersion'               : '1.3.21',
            'mapkitVersion'               : '3.3.1',
            'coroutinesVersion'           : '1.1.1',

            'assertjVersion'              : '3.11.1',
            'espressoVersion'             : '3.1.2-alpha01',
            'junit4Version'               : '4.12',
            'junit5PluginVersion'         : '1.4.0.0',
            'junit5Version'               : '5.3.2',
            'junitLauncherVersion'        : '1.3.2',
            'mockitoVersion'              : '2.24.5',
            'spekVersion'                 : '2.0.1',
            'testRunnerVersion'           : '1.1.2-alpha01',
            'jacocoVersion'               : '0.8.3',
            'coverallsVersion'            : '2.4.0'
    ]

    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath "com.android.tools.build:gradle:${versions.gradleVersion}"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${versions.kotlinVersion}"
        classpath "de.mannodermaus.gradle.plugins:android-junit5:${versions.junit5PluginVersion}"
        classpath "org.kt3k.gradle.plugin:coveralls-gradle-plugin:${versions.coverallsVersion}"
        classpath 'com.github.dcendents:android-maven-gradle-plugin:2.1'

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        google()
        mavenCentral()
        jcenter()
    }

    project.ext {
        mapkitVersion = "$versions.mapkitVersion"
        kotlinVersion = "$versions.kotlinVersion"
        coroutinesVersion = "$versions.coroutinesVersion"

        assertjVersion = "$versions.assertjVersion"
        espressoVersion = "$versions.espressoVersion"
        junit4Version = "$versions.junit4Version"
        junit5Version = "$versions.junit5Version"
        junitLauncherVersion = "$versions.junitLauncherVersion"
        mockitoVersion = "$versions.mockitoVersion"
        spekVersion = "$versions.spekVersion"
        testRunnerVersion = "$versions.testRunnerVersion"
        jacocoVersion = "$versions.jacocoVersion"
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
